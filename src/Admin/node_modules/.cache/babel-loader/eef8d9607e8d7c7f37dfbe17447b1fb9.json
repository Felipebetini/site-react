{"ast":null,"code":"export default {\n  //Tentativa de Login\n  login: ({\n    username\n  }) => {\n    localStorage.setItem(\"username\", username); //aceita todos as combinacoes de usernames/senhas\n\n    return Promise.resolve();\n  },\n  //Chamado quando o cliente clica em logOut\n  logout: () => {\n    localStorage.removeItem(\"username\");\n    return Promise.resolve();\n  },\n  //erro da API\n  checkError: ({\n    status\n  }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"username\");\n      return Promise.reject();\n    }\n\n    return Promise.resolve();\n  },\n  //chamado quando o usuario navega para uma nova localizacao, pra checar a autenticacao\n  checkAuth: () => {\n    return localStorage.getItem(\"username\") ? Promise.resolve() : Promise.reject();\n  },\n  //chamado quando o usuario navega para outro local para checar as permissoes\n  getPermissions: () => Promise.resolve()\n};","map":{"version":3,"sources":["/home/avell/test-admin/src/authProvider.js"],"names":["login","username","localStorage","setItem","Promise","resolve","logout","removeItem","checkError","status","reject","checkAuth","getItem","getPermissions"],"mappings":"AAAA,eAAe;AACb;AACAA,EAAAA,KAAK,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AACvBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,QAAjC,EADuB,CAEvB;;AACA,WAAOG,OAAO,CAACC,OAAR,EAAP;AACD,GANY;AAOb;AACAC,EAAAA,MAAM,EAAE,MAAM;AACZJ,IAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACA,WAAOH,OAAO,CAACC,OAAR,EAAP;AACD,GAXY;AAYb;AACAG,EAAAA,UAAU,EAAE,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAgB;AAC1B,QAAIA,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,GAAjC,EAAsC;AACpCP,MAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACA,aAAOH,OAAO,CAACM,MAAR,EAAP;AACD;;AACD,WAAON,OAAO,CAACC,OAAR,EAAP;AACD,GAnBY;AAoBb;AACAM,EAAAA,SAAS,EAAE,MAAM;AACf,WAAOT,YAAY,CAACU,OAAb,CAAqB,UAArB,IACHR,OAAO,CAACC,OAAR,EADG,GAEHD,OAAO,CAACM,MAAR,EAFJ;AAGD,GAzBY;AA0Bb;AACAG,EAAAA,cAAc,EAAE,MAAMT,OAAO,CAACC,OAAR;AA3BT,CAAf","sourcesContent":["export default {\n  //Tentativa de Login\n  login: ({ username }) => {\n    localStorage.setItem(\"username\", username);\n    //aceita todos as combinacoes de usernames/senhas\n    return Promise.resolve();\n  },\n  //Chamado quando o cliente clica em logOut\n  logout: () => {\n    localStorage.removeItem(\"username\");\n    return Promise.resolve();\n  },\n  //erro da API\n  checkError: ({ status }) => {\n    if (status === 401 || status === 403) {\n      localStorage.removeItem(\"username\");\n      return Promise.reject();\n    }\n    return Promise.resolve();\n  },\n  //chamado quando o usuario navega para uma nova localizacao, pra checar a autenticacao\n  checkAuth: () => {\n    return localStorage.getItem(\"username\")\n      ? Promise.resolve()\n      : Promise.reject();\n  },\n  //chamado quando o usuario navega para outro local para checar as permissoes\n  getPermissions: () => Promise.resolve(),\n};\n"]},"metadata":{},"sourceType":"module"}