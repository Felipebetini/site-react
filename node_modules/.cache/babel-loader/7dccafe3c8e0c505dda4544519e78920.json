{"ast":null,"code":"var _jsxFileName = \"/home/avell/site/src/components/posts.js\";\nimport React from \"react\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport { List, Datagrid, TextField, ReferenceField, EditButton, SimpleForm, TextInput, SelectInput, Edit, Create, ReferenceInput, Filter, SimpleList } from \"react-admin\";\nexport const PostList = props => {\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down(\"sm\"));\n  return /*#__PURE__*/React.createElement(List, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }), isSmall ? /*#__PURE__*/React.createElement(SimpleList, {\n    primaryText: record => record.title,\n    secondaryText: record => `${record.views} views`,\n    tertiaryText: record => new Date(record.published_at).toLocaleDateString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Datagrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    source: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ReferenceField, {\n    label: \"User\",\n    source: \"userId\",\n    reference: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    source: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    source: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    source: \"body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(EditButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  })));\n};\nexport const PostEdit = props => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(SimpleForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(TextInput, {\n  disabled: true,\n  source: \"id\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(ReferenceInput, {\n  source: \"userId\",\n  reference: \"users\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(SelectInput, {\n  optionText: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(TextInput, {\n  source: \"title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  multiline: true,\n  source: \"body\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 7\n  }\n})));\nexport const PostCreate = props => /*#__PURE__*/React.createElement(Create, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(SimpleForm, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ReferenceInput, {\n  source: \"userId\",\n  reference: \"users\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(SelectInput, {\n  optionText: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }\n})), /*#__PURE__*/React.createElement(TextInput, {\n  source: \"title\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  multiline: true,\n  source: \"body\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 7\n  }\n})));\n\nconst PostTitle = ({\n  record\n}) => {\n  return /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }\n  }, \"Post \", record ? `\"${record.title}\"` : \"\");\n};\n\nconst PostFilter = props => /*#__PURE__*/React.createElement(Filter, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(TextInput, {\n  label: \"Search\",\n  source: \"q\",\n  alwaysOn: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(ReferenceInput, {\n  label: \"User\",\n  source: \"userId\",\n  reference: \"users\",\n  allowEmpty: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(SelectInput, {\n  optionText: \"name\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }\n})));","map":{"version":3,"sources":["/home/avell/site/src/components/posts.js"],"names":["React","useMediaQuery","List","Datagrid","TextField","ReferenceField","EditButton","SimpleForm","TextInput","SelectInput","Edit","Create","ReferenceInput","Filter","SimpleList","PostList","props","isSmall","theme","breakpoints","down","record","title","views","Date","published_at","toLocaleDateString","PostEdit","PostCreate","PostTitle","PostFilter"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport {\n  List,\n  Datagrid,\n  TextField,\n  ReferenceField,\n  EditButton,\n  SimpleForm,\n  TextInput,\n  SelectInput,\n  Edit,\n  Create,\n  ReferenceInput,\n  Filter,\n  SimpleList,\n} from \"react-admin\";\n\nexport const PostList = (props) => {\n  const isSmall = useMediaQuery((theme) => theme.breakpoints.down(\"sm\"));\n  return (\n    <List {...props}>\n      {isSmall ? (\n        <SimpleList\n          primaryText={(record) => record.title}\n          secondaryText={(record) => `${record.views} views`}\n          tertiaryText={(record) =>\n            new Date(record.published_at).toLocaleDateString()\n          }\n        />\n      ) : (\n        <Datagrid>\n          <TextField source=\"id\" />\n          <ReferenceField label=\"User\" source=\"userId\" reference=\"users\">\n            <TextField source=\"name\" />\n          </ReferenceField>\n          <TextField source=\"title\" />\n          <TextField source=\"body\" />\n          <EditButton />\n        </Datagrid>\n      )}\n    </List>\n  );\n};\n\nexport const PostEdit = (props) => (\n  <Edit {...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <ReferenceInput source=\"userId\" reference=\"users\">\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n\n      <TextInput source=\"title\" />\n\n      <TextInput multiline source=\"body\" />\n    </SimpleForm>\n  </Edit>\n);\n\nexport const PostCreate = (props) => (\n  <Create {...props}>\n    <SimpleForm>\n      <ReferenceInput source=\"userId\" reference=\"users\">\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n      <TextInput source=\"title\" />\n      <TextInput multiline source=\"body\" />\n    </SimpleForm>\n  </Create>\n);\n\nconst PostTitle = ({ record }) => {\n  return <span>Post {record ? `\"${record.title}\"` : \"\"}</span>;\n};\n\nconst PostFilter = (props) => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n    <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>\n  </Filter>\n);\n"]},"metadata":{},"sourceType":"module"}